class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length())return false;
        char[] sArr=s.toCharArray();
        char[] tArr=t.toCharArray();
        Arrays.sort(sArr);
        Arrays.sort(tArr);
        return Arrays.equals(sArr,tArr);
    }
}



class Solution {
    public boolean isAnagram(String s, String t) {
        if (s.length() != t.length()) return false; // Lengths must be the same
        
        int[] m1 = new int[26]; // Array to count frequency of characters in s
        int[] m2 = new int[26]; // Array to count frequency of characters in t
        
        for (int i = 0; i < s.length(); i++) {
            m1[s.charAt(i)-'a']++; // Increment count for char in s
            m2[t.charAt(i)-'a']++; // Increment count for char in t
        }
        
        // Compare the character frequencies for all possible ASCII values (0-255)
        for (int i = 0; i < 26; i++) {
            if (m1[i] != m2[i]) return false; // Mismatch found
        }
        
        return true; // If all frequencies match, s and t are anagrams
    }
}
